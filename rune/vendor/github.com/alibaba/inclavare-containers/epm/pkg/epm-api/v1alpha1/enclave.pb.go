// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: enclave.proto

package v1alpha1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Enclave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fd     int64            `protobuf:"varint,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Nr     int64            `protobuf:"varint,2,opt,name=nr,proto3" json:"nr,omitempty"`
	Layout []*Enclavelayout `protobuf:"bytes,3,rep,name=layout,proto3" json:"layout,omitempty"`
}

func (x *Enclave) Reset() {
	*x = Enclave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enclave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enclave) ProtoMessage() {}

func (x *Enclave) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enclave.ProtoReflect.Descriptor instead.
func (*Enclave) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{0}
}

func (x *Enclave) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Enclave) GetNr() int64 {
	if x != nil {
		return x.Nr
	}
	return 0
}

func (x *Enclave) GetLayout() []*Enclavelayout {
	if x != nil {
		return x.Layout
	}
	return nil
}

type Enclavelayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr int64         `protobuf:"varint,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Size int64         `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Prot *EnclavePerms `protobuf:"bytes,3,opt,name=prot,proto3" json:"prot,omitempty"`
}

func (x *Enclavelayout) Reset() {
	*x = Enclavelayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enclavelayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enclavelayout) ProtoMessage() {}

func (x *Enclavelayout) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enclavelayout.ProtoReflect.Descriptor instead.
func (*Enclavelayout) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{1}
}

func (x *Enclavelayout) GetAddr() int64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *Enclavelayout) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Enclavelayout) GetProt() *EnclavePerms {
	if x != nil {
		return x.Prot
	}
	return nil
}

type EnclavePerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Read    bool `protobuf:"varint,1,opt,name=read,proto3" json:"read,omitempty"`
	Write   bool `protobuf:"varint,2,opt,name=write,proto3" json:"write,omitempty"`
	Execute bool `protobuf:"varint,3,opt,name=execute,proto3" json:"execute,omitempty"`
	Share   bool `protobuf:"varint,4,opt,name=share,proto3" json:"share,omitempty"`
	Private bool `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *EnclavePerms) Reset() {
	*x = EnclavePerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enclave_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnclavePerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnclavePerms) ProtoMessage() {}

func (x *EnclavePerms) ProtoReflect() protoreflect.Message {
	mi := &file_enclave_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnclavePerms.ProtoReflect.Descriptor instead.
func (*EnclavePerms) Descriptor() ([]byte, []int) {
	return file_enclave_proto_rawDescGZIP(), []int{2}
}

func (x *EnclavePerms) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *EnclavePerms) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

func (x *EnclavePerms) GetExecute() bool {
	if x != nil {
		return x.Execute
	}
	return false
}

func (x *EnclavePerms) GetShare() bool {
	if x != nil {
		return x.Share
	}
	return false
}

func (x *EnclavePerms) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

var File_enclave_proto protoreflect.FileDescriptor

var file_enclave_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x22, 0x5a, 0x0a, 0x07, 0x45, 0x6e, 0x63,
	0x6c, 0x61, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x66, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6e, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x6e, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x06, 0x6c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x22, 0x63, 0x0a, 0x0d, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x70, 0x72, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x73, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x0c, 0x45,
	0x6e, 0x63, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enclave_proto_rawDescOnce sync.Once
	file_enclave_proto_rawDescData = file_enclave_proto_rawDesc
)

func file_enclave_proto_rawDescGZIP() []byte {
	file_enclave_proto_rawDescOnce.Do(func() {
		file_enclave_proto_rawDescData = protoimpl.X.CompressGZIP(file_enclave_proto_rawDescData)
	})
	return file_enclave_proto_rawDescData
}

var file_enclave_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_enclave_proto_goTypes = []interface{}{
	(*Enclave)(nil),       // 0: v1alpha1.Enclave
	(*Enclavelayout)(nil), // 1: v1alpha1.Enclavelayout
	(*EnclavePerms)(nil),  // 2: v1alpha1.EnclavePerms
}
var file_enclave_proto_depIdxs = []int32{
	1, // 0: v1alpha1.Enclave.layout:type_name -> v1alpha1.Enclavelayout
	2, // 1: v1alpha1.Enclavelayout.prot:type_name -> v1alpha1.EnclavePerms
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_enclave_proto_init() }
func file_enclave_proto_init() {
	if File_enclave_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enclave_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enclave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enclavelayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enclave_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnclavePerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enclave_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enclave_proto_goTypes,
		DependencyIndexes: file_enclave_proto_depIdxs,
		MessageInfos:      file_enclave_proto_msgTypes,
	}.Build()
	File_enclave_proto = out.File
	file_enclave_proto_rawDesc = nil
	file_enclave_proto_goTypes = nil
	file_enclave_proto_depIdxs = nil
}
