name: Run shelter with rs-tls-server

# Controls when the action will run. Triggers the workflow on pull request labeled testing-before-checkin.
on: 
  pull_request_target:
    types: labeled

jobs:
  rune_shelter:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'testing-before-checkin') }}
    runs-on: [self-hosted, SGX1]
    strategy:
      matrix:
        tag: [ubuntu18.04, centos8.1]
    steps:
    - uses: actions/checkout@v2
      with:
        ref: refs/pull/${{ github.event.pull_request.number }}/merge

    - name: Prepare work
      run: echo "CPU_NUM=$(nproc --all)" >> $GITHUB_ENV

    - name: Create container
      run: |
        rune_test=$(docker run -itd --privileged --rm --net host --device /dev/isgx -v $GITHUB_WORKSPACE:/root/inclavare-containers rune-test:${{ matrix.tag }});
        echo "rune_test=$rune_test" >> $GITHUB_ENV

    # ra-tls is buggy on parallel compilation. Always use -j1.
    - name: Build and run ra-tls-server 
      run: |
        docker exec $rune_test bash -c "mkdir -p /run/rune;
        touch ra-tls.sock;
        cp -r /root/inclavare-containers /root/inclavare-containers-test;
        cd /root/inclavare-containers-test/ra-tls;
        find ../ -name *.pb.go | xargs -I files touch files;
        export SPID=${{ secrets.SPID }};
        export EPID_SUBSCRIPTION_KEY=${{ secrets.SUB_KEY }};
        export QUOTE_TYPE=SGX_UNLINKABLE_SIGNATURE;
        make -j1;
        cd /root/inclavare-containers-test/ra-tls/build/bin;
        ./ra-tls-server run &"

    - name: Build and run shelter
      run: |
        docker exec $rune_test bash -c "cd /root/inclavare-containers-test/shelter;
        make -j1"
        docker exec $rune_test bash -c "./shelter remoteattestation"

    - name: Kill the container
      run: docker stop $rune_test
